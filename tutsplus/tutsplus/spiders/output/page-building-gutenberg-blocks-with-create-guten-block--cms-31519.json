{"fileName": "building-gutenberg-blocks-with-create-guten-block--cms-31519", "title": ["Building Gutenberg Blocks With create-guten-block"], "author": ["Maedah Batool \ud83d\udc69\u200d\ud83d\udcbb"], "auther_details": ["WP Core Contributor | Engineer | Marketing Rep @MakeWordPress"], "length": ["Intermediate", "Short"], "body": ["Gutenberg is the new WordPress editor, and everyone is talking about it. It has introduced an all-new way of writing content with WordPress. So not only can developers benefit from its block-modeled layout, but end users will also be able to create dynamic page layouts with it.\u00a0", "However, building custom blocks with Gutenberg can be quite a hassle for developers who want to integrate\u00a0it into their projects. This tutorial is going to feature an incredible toolkit\u2014", "create-guten-block", "\u2014through which you can create Gutenberg blocks in a matter of minutes.", "So, let's get started!", "create-guten-block", "\u00a0(", "cgb", ") is a zero-configuration developer toolkit for building WordPress Gutenberg blocks. Built by ", "Ahmad Awais", "\u2014my husband and\u00a0an open-source developer advocate who regularly contributes to the WordPress Core\u2014the toolkit has reduced the difficulty of creating Gutenberg blocks. It is\u00a0zero-config, and it creates blocks with\u00a0no lock-in and only\u00a0a single dependency.\u00a0\u00a0", "To build a Gutenberg block, you need to first create a WordPress plugin. To do so, you'll begin by configuring Webpack, React, ES 6/7/8/Next, ESLint, Babel, etc., and then you can finally start coding your\u00a0block. And you'll need to continue to update your tooling configurations as those\u00a0supporting packages and libraries.\u00a0", "This slows down development, so Ahmad has hidden all this configuration in an optimized package\u00a0called\u00a0", "cgb-scripts", ", which you find in the block's root folder. This is the single dependency which I mentioned earlier.\u00a0", "So, instead of updating everything separately and regularly, the\u00a0", "cgb-scripts", "\u00a0package is kept up to date, and in this way you can always update it without making any changes to your code. That\u2019s one thing which I liked the most about it.\u00a0", "Long story short...", "Let's now dig into some of the tool's most\u00a0prominent features.", "create-guten-block", "\u00a0offers an up-to-date dev environment for\u00a0developing a\u00a0WordPress Gutenberg plugin. It is packed with features like:", "The maintenance and updates of all the above-mentioned tools are handled by a single build dependency: the\u00a0", "cgb-scripts", "\u00a0package.\u00a0So, despite using Webpack, Babel, ESLint, and other amazing projects, you can still enjoy a hassle-free development experience with this package, which will stay up to date all the time.", "While using the\u00a0", "create-guten-block", " toolkit, you don\u2019t need to configure anything. Most of the things which you require for the development and production environment come pre-configured.\u00a0", "One concern which developers might have before they start using the\u00a0", "cgb", "\u00a0toolkit is what to do if a project needs some customization, since these tools are preconfigured to work in a specific way. So, the good news is that at any point you can\u00a0", "\u201ceject\u201d", "\u00a0your project and customize it\u2014but then you will need to maintain the configuration yourself.", "To eject your project, run a single command, and all the configuration and build dependencies will be moved directly into your project, and you can start exactly where you left.", "Getting started and working with ", "create-guten-block", " toolkit is very simple.\u00a0Just install it and then run to create a Gutenberg block plugin for WordPress. But before that, there are some prerequisites which need to be set up. So, make sure you have the following:", "Next, follow these simple steps:", "You need to have ", "node.js", "\u00a0and\u00a0", "npm", " installed. If they are already installed, then skip to the next step. Otherwise, download\u00a0", "Node.js", "\u00a0and install it. To verify the installation, type the following commands.\u00a0", "Now, you'll install\u00a0", "create-guten-block", "\u00a0inside your local WordPress\u00a0", "/wp.local/wp-content/plugins/", "\u00a0directory. Also, you'll provide a name for the plugin which you want to create. Run the following command and wait for some time since it might take a few minutes to install.", "This command creates a plugin directory called\u00a0", "demo-block", "\u00a0inside the current folder. It also creates the necessary folder structure\u00a0and installs the dev dependencies.", "It creates a folder structure like this:", "After completing the installation setup, open your project folder and run the start script by typing the following command:", "The ", "npm start", " command runs your plugin in development mode. There is also an\u00a0", "npm run build", "\u00a0command which helps you run your plugin in production mode. Read on to find details about three different functions which you can perform with the\u00a0", "cgb", " toolkit.", "When you're working with this script, you'll be working with three scripts that will help you ", "develop", ", ", "build", ", and ", "eject", " your plugin.", "This command is used to compile and run the Gutenberg block while you're working in development mode. It also ", "watches", " for any changes and reports back with errors in your code.", "To work in production mode, run this command\u00a0inside the\u00a0", "dist", "\u00a0folder. Here, you will see the build messages, errors, and lint warnings in the console. This command runs only once and reports back the ", "gzip", " file sizes of the produced code.", "If at any point you want to eject your plugin out of\u00a0", "create-guten-block", ", run this command. This lets you customize the project according to your requirements. However, it is a one-way process and cannot be reverted.\u00a0", "After you've\u00a0", "eject", "ed,\u00a0you have to update and maintain all the project\u00a0dependencies on your own.", "After successful installation and setup, you can open your WordPress dashboard and go to the ", "Plugins", " section. Here you can find a new plugin called\u00a0", "demo-block \u2014 CGB Gutenberg Block Plugin", " being added. Click the ", "Activate", " button and you are good to go.", "Now go to", " Posts > Add New", " to open the Gutenberg editor. (Remember the Gutenberg plugin is a prerequisite for\u00a0the\u00a0", "create-guten-block", " toolkit.)", "Click on the ", "+", "\u00a0icon to access all the blocks. In the search bar, type ", "CGB", "\u00a0and you'll find a Gutenberg block being added.", "Click it and add a Gutenberg block in the WordPress editor like this:", "Hit the ", "Publish", " button to view how it appears on the front-end.", "Surprised? I was,\u00a0when I realized that Ahmad has styled the Gutenberg blocks differently for the front-end and back-end. This can be further verified by opening the ", "src", " folder of your\u00a0", "demo-block", " plugin in the code editor.\u00a0", "Here, you find two separate files:\u00a0", "editor.scss", " which handles the CSS for the back-end, and\u00a0", "style.css", "\u00a0(", "editor.css", " is\u00a0enqueued after ", "style.scss", ", which makes it higher in priority). Both these files have been included in the main ", "block.js", " file via the ", "import", " command.\u00a0", "Unlike other starter kits and boilerplates, there are many distinguishing features which\u00a0", "create-guten-block", "\u00a0tookit\u00a0offers, and to sum it up, here is a brief summary of its key features:", "create-guten-block", "\u00a0is\u00a0", "MIT licensed", "\u00a0and available for free\u00a0", "on GitHub", ".\u00a0"], "pubished_date": ["7 Aug 2018"]}